services:
  web:
    build: web/
    ports:
      - "3000:3000"
    depends_on:
      jaeger:
        condition: service_started
      api:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3000/health"]
      interval: 10s
      retries: 3
      timeout: 5s
    environment:
      NEXT_PUBLIC_API_URL: http://127.0.0.1:3001
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4318
    links:
      - "jaeger:jaeger"

  api:
    build: api/
    ports:
      - "3001:3001"
    depends_on:
      jaeger:
        condition: service_started
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3001/health"]
      interval: 10s
      retries: 3
      timeout: 5s
    links:
      - "postgres:postgres"
      - "jaeger:jaeger"

  postgres:
    image: postgres
    restart: always
    shm_size: 128mb
    ports:
      - "5432:5432"
    volumes:
      - ./api/migrations:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 10s
      interval: 10s
      retries: 5
      timeout: 30s

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - .deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./.deploy/grafana:/etc/grafana/provisioning/
      - ./.deploy/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    depends_on:
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"   # Jaeger thrift compact
      - "6832:6832/udp"   # Jaeger thrift binary
      - "5775:5775/udp"   # Zipkin compact thrift
      - "14250:14250"     # Model.proto
      - "14268:14268"     # Jaeger HTTP thrift
      - "16686:16686"     # UI
      - "4317:4317"       # OTLP gRPC
      - "4318:4318"       # OTLP HTTP
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
